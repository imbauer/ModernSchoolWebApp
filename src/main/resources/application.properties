#spring.h2.console.enabled=false
#
#logging.level.org.hibernate.SQL=error
#
#spring.datasource.url=jdbc:postgresql://mypostgres:5432/postgres
#spring.datasource.username=user
#spring.datasource.password=password
#spring.source.driver=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=create-drop
#server.port=8083
#spring.profiles.active=@spring.profiles.active@
#
#
#spring.datasource.platform=postgres
#spring.jpa.show-sql=true


# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://192.168.99.100:5432/postgres
spring.datasource.username=user
spring.datasource.password=password

spring.datasource.driver-class-name=org.postgresql.Driver
server.port=8083
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect